let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <Plug>(table-mode-tableize) |:call tablemode#TableizeInsertMode()a
imap <F2> :wa
map! <S-Insert> *
vnoremap <silent>  :call RangeCommentLine()
nnoremap <silent>  :call CommentLine()
onoremap <silent>  :call CommentLine()
vmap <silent>  a:call MyKeyMapHighlight()gv
nmap <silent>  a:call MyKeyMapHighlight()
map 	 %v%
map  :WMToggle
map  :BottomExplorerWindow 
map  :FirstExplorerWindow 
vnoremap <silent>  :call RangeUnCommentLine()
nnoremap <silent>  :call UnCommentLine()
onoremap <silent>  :call UnCommentLine()
xmap \T <Plug>(table-mode-tableize-delimiter)
xmap \tt <Plug>(table-mode-tableize)
nmap \tt <Plug>(table-mode-tableize)
nnoremap <silent> \tm :call tablemode#Toggle()
nmap <silent> \w\w <Plug>(wiki-journal)
nmap <silent> \ww <Plug>(wiki-index)
nmap <silent> \wx <Plug>(wiki-reload)
vmap gx <Plug>NetrwBrowseXVis
nmap gx <Plug>NetrwBrowseX
vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())
nnoremap <silent> <Plug>(table-mode-sort) :call tablemode#spreadsheet#Sort('')
nnoremap <silent> <Plug>(table-mode-eval-formula) :call tablemode#spreadsheet#formula#EvaluateFormulaLine()
nnoremap <silent> <Plug>(table-mode-add-formula) :call tablemode#spreadsheet#formula#Add()
nnoremap <silent> <Plug>(table-mode-delete-column) :call tablemode#spreadsheet#DeleteColumn()
nnoremap <silent> <Plug>(table-mode-delete-row) :call tablemode#spreadsheet#DeleteRow()
xnoremap <silent> <Plug>(table-mode-cell-text-object-i) :call tablemode#spreadsheet#cell#TextObject(1)
xnoremap <silent> <Plug>(table-mode-cell-text-object-a) :call tablemode#spreadsheet#cell#TextObject(0)
onoremap <silent> <Plug>(table-mode-cell-text-object-i) :call tablemode#spreadsheet#cell#TextObject(1)
onoremap <silent> <Plug>(table-mode-cell-text-object-a) :call tablemode#spreadsheet#cell#TextObject(0)
nnoremap <silent> <Plug>(table-mode-motion-right) :call tablemode#spreadsheet#cell#Motion('l')
nnoremap <silent> <Plug>(table-mode-motion-left) :call tablemode#spreadsheet#cell#Motion('h')
nnoremap <silent> <Plug>(table-mode-motion-down) :call tablemode#spreadsheet#cell#Motion('j')
nnoremap <silent> <Plug>(table-mode-motion-up) :call tablemode#spreadsheet#cell#Motion('k')
nnoremap <silent> <Plug>(table-mode-realign) :call tablemode#table#Realign('.')
xnoremap <silent> <Plug>(table-mode-tableize-delimiter) :call tablemode#TableizeByDelimiter()
xnoremap <silent> <Plug>(table-mode-tableize) :Tableize
nnoremap <silent> <Plug>(table-mode-tableize) :Tableize
nnoremap <silent> <Plug>(wiki-reload) :WikiReload
nnoremap <silent> <Plug>(wiki-journal) :WikiJournal
nnoremap <silent> <Plug>(wiki-index) :WikiIndex
map <F12> ::TlistToggle
map <F2> :w
map <F8> :tabnext
map <F7> :tabprevious
map <F9> :tabclose
map <F6> :tabnew
vmap <C-Del> "*d
vmap <S-Del> "*d
vmap <C-Insert> "*y
vmap <S-Insert> "-d"*P
nmap <S-Insert> "*P
imap <silent>  X:call MyKeyMapHighlight()a
cmap <silent>  
cmap  +
imap  "+gPi
imap [ []<Left>
imap { {}O
let &cpo=s:cpo_save
unlet s:cpo_save
set keymap=russian-jcukenwin
set autoindent
set background=dark
set backspace=indent,eol,start
set cindent
set clipboard=unnamed
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp1251,latin1
set guifont=source_code_pro:h11:cRUSSIAN,courier_new:h11:cRUSSIAN
set guioptions=aegirLt
set helplang=ru
set history=500
set imsearch=0
set iskeyword=@,48-57,_,192-255
set laststatus=2
set listchars=eol:‚Æ†,tab:‚Üí‚Üí,trail:~,extends:>,precedes:<,space:¬∑
set runtimepath=C:\\Progs\\vim\\vimfiles,C:\\Progs\\vim\\vimfiles\\plugged\\oceandeep,C:\\Progs\\vim\\vimfiles\\plugged\\wiki,C:\\Progs\\vim\\vimfiles\\plugged\\vim-table-mode,C:\\Progs\\vim\\vimfiles\\plugged\\xml.vim,C:\\Progs\\vim\\vimfiles\\plugged\\comments.vim,C:\\Progs\\vim/vimfiles,C:\\Progs\\vim\\vim81,C:\\Progs\\vim/vimfiles/after,C:\\Progs\\vim\\vimfiles/after
set shiftwidth=4
set smartindent
set smarttab
set softtabstop=4
set statusline=%F%m%r%h%w\ [FF,FE,TE=%{&fileformat},%{&fileencoding},%{&encoding}]\ [TYPE=%Y]\ [ASCII=%03.3b]\ [HEX=%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
set tabstop=4
set termencoding=cp1251
set textwidth=1000
set whichwrap=b,s,<,>,[,]
set window=67
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd C:\Progs\bat\samples
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 test.bat
badd +0 parse_arguments.bat
badd +0 args.txt
argglobal
silent! argdel *
$argadd test.bat
edit test.bat
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 32 + 34) / 68)
exe 'vert 1resize ' . ((&columns * 106 + 140) / 280)
exe '2resize ' . ((&lines * 33 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 106 + 140) / 280)
exe 'vert 3resize ' . ((&columns * 173 + 140) / 280)
argglobal
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=b:rem,b:@rem,b:REM,b:@REM,:::
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'dosbatch'
setlocal filetype=dosbatch
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=cqrol
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetDosBatchIndent(v:lnum)
setlocal indentkeys=!^F,o,O,0=)
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal list
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal signcolumn=auto
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'dosbatch'
setlocal syntax=dosbatch
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=1000
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 22 - ((21 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
22
normal! 09|
wincmd w
argglobal
if bufexists('parse_arguments.bat') | buffer parse_arguments.bat | else | edit parse_arguments.bat | endif
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=b:rem,b:@rem,b:REM,b:@REM,:::
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'dosbatch'
setlocal filetype=dosbatch
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=cqrol
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetDosBatchIndent(v:lnum)
setlocal indentkeys=!^F,o,O,0=)
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal list
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal signcolumn=auto
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'dosbatch'
setlocal syntax=dosbatch
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=1000
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 45 - ((24 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
45
normal! 0
wincmd w
argglobal
if bufexists('args.txt') | buffer args.txt | else | edit args.txt | endif
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=fb:-,fb:*
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'text'
setlocal filetype=text
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal signcolumn=auto
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'text'
setlocal syntax=text
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=1000
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 8 - ((7 * winheight(0) + 33) / 66)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
8
normal! 041|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 32 + 34) / 68)
exe 'vert 1resize ' . ((&columns * 106 + 140) / 280)
exe '2resize ' . ((&lines * 33 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 106 + 140) / 280)
exe 'vert 3resize ' . ((&columns * 173 + 140) / 280)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
